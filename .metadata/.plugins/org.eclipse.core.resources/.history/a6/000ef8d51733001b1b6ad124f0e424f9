AOP (관점 지향 프로그래밍)

회원의 등급을 관리하는 기능

핵심로직

1. for를 돌면서 새로운등급으로 업데이트
2. 

주기능인 회원 등급 기능 구현시 로깅, 보안, 트랜잭션 기능 등의 보조기능을 일일히 구현해야하기에
시간이 많이걸리고 소스 코드도 복잡해짐

--> 관점 지향 프로그래밍을 이용해서 주기능과 보조기능을 분리해서 메서드에 적용했음

예시: AOP를 적용한 쇼핑몰 구조도
												주기능
								회원관리		상품관리		주문관리
보조기능 로깅, 보안, 트랜잭션 -----o----------------o---------------o-------
							  -----o----------------o---------------o-------
							  -----o----------------o---------------o-------


- 스프링에서 AOP 기능 사용하기

용어
aspect	구현하고자 하는 보조 기능
advice	실체 구현체
joinpoint	advice를 적용하는 지점
pointcut	advice가 적용되는 대상을 지정함
target		advice가 적용되는 클래스를 의미
weaving		advice를 주기능에 적용하는 것을 의미

스프링 프레임워크에서 AOP의 기능을 구현하는 방법
1. 스프링 프레임워크에서 제공하는 API활용
2. @Aspect 애너테이션을 이용

- 스프링 API를 이용한 방법
1. Target Class 지정
2. Advice Class 지정
3. 설정 파일에서 Pointcut 설정
4. 설정 파일에서 어드바이스와 포인트컷을 결합하는 어드바이저를 설정
5. 설정 파일에서 스프링의 ProxyFactoryBean 클래스를 이용해 타깃에 어드바이스를 설정
6. getBean() 메서드로 빈 객체에 접근해 사용
							  
							  
							  